Token 0, string cint data type,  line number 1
Token 100, string tf identifier, line number 1
Token 23, string ( operator, line number 1
Token 0, string cint data type,  line number 1
Token 100, string x identifier, line number 1
Token 24, string ) operator, line number 1
Token 27, string { operator, line number 2
Token 0, string cint data type,  line number 3
Token 100, string y identifier, line number 3
Token 42, string = operator, line number 3
Token 100, string x identifier, line number 3
Token 38, string ; operator, line number 3
Token 0, string cint data type,  line number 4
Token 100, string z identifier, line number 4
Token 42, string = operator, line number 4
Token 200, string 5 integer, line number 4
Token 38, string ; operator, line number 4
Token 3, string cbool data type,  line number 5
Token 100, string b identifier, line number 5
Token 42, string = operator, line number 5
Token 12, string true keyword,  line number 5
Token 38, string ; operator, line number 5
Token 3, string cbool data type,  line number 6
Token 100, string c identifier, line number 6
Token 42, string = operator, line number 6
Token 13, string false keyword,  line number 6
Token 38, string ; operator, line number 6
Token 7, string cif keyword,  line number 7
Token 23, string ( operator, line number 7
Token 100, string c identifier, line number 7
Token 21, string == operator, line number 7
Token 12, string true keyword,  line number 7
Token 24, string ) operator, line number 7
Token 0, string cint data type,  line number 8
Token 100, string t identifier, line number 8
Token 42, string = operator, line number 8
Token 300, string 6.3 floating point integer, line number 8
Token 38, string ; operator, line number 8
Token 0, string cint data type,  line number 9
Token 100, string a identifier, line number 9
Token 42, string = operator, line number 9
Token 200, string 009 integer, line number 9
Token 38, string ; operator, line number 9
Token 28, string } operator, line number 10
Token 38, string ; operator, line number 10
Token 28, string } operator, line number 11

End of Lexer Output